---
# tasks file for letsencrypt
- name: "Create required directories in /etc/letsencrypt"
  file:
    path: "/etc/letsencrypt/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=x,o=x
  with_items:
  - account
  - certs
  - csrs
  - keys
  tags:
    - letsencrypt

- name: "Generate a Let's Encrypt account key"
  shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"
  tags:
    - letsencrypt

- name: "Generate Let's Encrypt private key"
  shell: "openssl genrsa 4096 | sudo tee /etc/letsencrypt/keys/{{ domain_name }}.key"
  tags:
    - letsencrypt

- name: "Generate Let's Encrypt CSR"
  shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:*.{{ domain_name }}\")) | sudo tee /etc/letsencrypt/csrs/{{ domain_name }}.csr"
  args:
    executable: /bin/bash
  tags:
    - letsencrypt

- name: "Begin Let's Encrypt challenges"
  acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    terms_agreed: 1
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    cert: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    chain: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt"
    fullchain: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
    remaining_days: 30
  register: acme_challenge_your_domain
  tags:
    - letsencrypt

- name: "Create TXT record"
  cloudflare_dns:
    zone: "{{ domain_name }}"
    record: "{{ acme_challenge_your_domain.challenge_data[('*.'+domain_name)]['dns-01'].record }}"
    type: TXT
    state: present
    value: "{{ acme_challenge_your_domain.challenge_data[('*.'+domain_name)]['dns-01'].resource_value }}"
    account_email: "{{ cloudflare_email }}"
    account_api_token: "{{ cloudflare_token }}"
  when: acme_challenge_your_domain is changed
  tags:
    - letsencrypt

- name: "Create TXT record"
  cloudflare_dns:
    zone: "{{ domain_name }}"
    record: "{{ acme_challenge_your_domain.challenge_data[domain_name]['dns-01'].record }}"
    type: TXT
    state: present
    value: "{{ acme_challenge_your_domain.challenge_data[domain_name]['dns-01'].resource_value }}"
    account_email: "{{ cloudflare_email }}"
    account_api_token: "{{ cloudflare_token }}"
  when: acme_challenge_your_domain is changed
  tags:
    - letsencrypt

- name: "Complete Let's Encrypt challenges"
  acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    cert: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    chain: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt"
    fullchain: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
    data: "{{ acme_challenge_your_domain }}"
  when: acme_challenge_your_domain is changed
  tags:
    - letsencrypt

- name: "Delete TXT record"
  cloudflare_dns:
    zone: "{{ domain_name }}"
    record: "{{ acme_challenge_your_domain.challenge_data[('*.'+domain_name)]['dns-01'].record }}"
    type: TXT
    state: absent
    value: "{{ acme_challenge_your_domain.challenge_data[('*.'+domain_name)]['dns-01'].resource_value }}"
    account_email: "{{ cloudflare_email }}"
    account_api_token: "{{ cloudflare_token }}"
  when: acme_challenge_your_domain is changed
  tags:
    - letsencrypt
- name: "Delete TXT record"
  cloudflare_dns:
    zone: "{{ domain_name }}"
    record: "{{ acme_challenge_your_domain.challenge_data[domain_name]['dns-01'].record }}"
    type: TXT
    state: absent
    value: "{{ acme_challenge_your_domain.challenge_data[domain_name]['dns-01'].resource_value }}"
    account_email: "{{ cloudflare_email }}"
    account_api_token: "{{ cloudflare_token }}"
  when: acme_challenge_your_domain is changed
  tags:
    - letsencrypt
